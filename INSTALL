PREREQUISITES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- GNU Fortran and C compilers
  - Available from most package managers (e.g., APT on Ubuntu, Homebrew on macOS)
- CMake
  - Version 3.12 or higher
  - Available from most package managers
  - Download CMake directly at: https://cmake.org/download
- Make
  - Standard on most *nix operating systems
- LAPACK
  - Most versions should work fine
  - Available from most package managers
  - Available at: http://www.netlib.org/lapack
  - Hdef can be compiled without LAPACK; some programs will not work at all, and a few others will
    have LAPACK-dependent features disabled


BUILDING AND INSTALLING HDEF
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0. If you have not downloaded or cloned Hdef from Github, do that first. Make sure you unzip the
   zipfile before moving on to the next steps.


1. In a terminal, go to the Hdef directory. Make a new directory called build/ and change into the
   build/ directory. Assuming you are in the directory where you put Hdef (e.g., /path/to/hdef):

    >> pwd
        /path/to/hdef
    >> mkdir build
    >> cd build


2. Use cmake to configure the project:

    >> cmake ..

   On a Linux machine with the prerequisites listed above installed, this simple command *SHOULD*
   be sufficient to configure Hdef. On macOS, the default C compiler is not gcc, so you need to
   specify the version of gcc you have installed as the C compiler, e.g.:

    >> cmake -DCMAKE_C_COMPILER=gcc-15 ..

   The main variables you may need to specify to configure Hdef are:
   -DCMAKE_C_COMPILER=[/path/to/]gcc
   -DCMAKE_Fortran_COMPILER=[/path/to/]gfortran
   -DLAPACK_LIBRARIES=/path/to/lapack/libraries


3. Once cmake has finished configuring Hdef, type:

    >> cmake --build .

   to compile the Hdef executables in your build/ directory.


4. (OPTIONAL, BUT RECOMMENDED) To test all of the Hdef subroutines and executables, make sure you
   are in the build/ directory and type:

    >> cmake --build . -t test

   This will run all the unit tests and executable test scripts. To run only the executable test
   scripts and see their output, type:

    >> cmake --build . -t test-exec

   If the codes are compiled and installed correctly, the tests *SHOULD* complete with no errors.
   However, the tests are still a bit of a work in progress. So please report testing issues to
   me if you run into them!


5. (OPTIONAL) To install the Hdef executables, libraries, and tests in a particular location, type:

    >> cmake --install . --prefix /path/to/hdef/install

    If the --prefix option is left out, Hdef will be installed in a default location, which is
    something like /usr/local. I recommend specifying the installation directory.




QUESTIONS, COMMENTS, OR CONCERNS?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Contact matthew.w.herman@gmail.com.
